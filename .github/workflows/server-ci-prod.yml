# File: .github/workflows/server-ci-prod.yml

# --- REPLACE START: production server CI (main → production env), keep tests/build, no deploy here ---
name: Server CI (prod)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Least-privilege: allow reading repo and (optionally) OIDC later
permissions:
  id-token: write
  contents: read

jobs:
  server-ci-prod:
    name: Server CI (prod) — lint • test • openapi • build
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        working-directory: server

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    # Safe defaults for CI; resolve selected vars from production secrets below.
    env:
      NODE_ENV: test
      PORT: 5001
      MONGO_URI: mongodb://127.0.0.1:27017/loventia_ci
      MONGODB_URI: mongodb://127.0.0.1:27017/loventia_ci
      CLIENT_URL: http://localhost:5174

      JWT_SECRET: test_secret
      JWT_REFRESH_SECRET: test_refresh_secret
      STRIPE_MOCK_MODE: "1"
      STRIPE_SECRET_KEY: sk_test_dummy
      STRIPE_WEBHOOK_SECRET: whsec_dummy
      STRIPE_PRICE_ID: price_dummy

      JEST_JUNIT_OUTPUT: ./test-results/junit.xml

      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      PERF_PASSWORD: ${{ secrets.PERF_PASSWORD }}
      CYPRESS_TEST_PASSWORD: ${{ secrets.CYPRESS_TEST_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: server/package-lock.json

      - name: Install deps (server)
        run: npm ci

      # Override defaults from production Environment secrets where provided.
      - name: Resolve env from production secrets
        shell: bash
        run: |
          # URLs
          if [ -n "${{ secrets.CLIENT_URL }}" ]; then echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> "$GITHUB_ENV"; fi

          # Mongo (app build/start may read MONGODB_URI; tests keep local mongo via MONGO_URI)
          if [ -n "${{ secrets.MONGODB_URI }}" ]; then echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> "$GITHUB_ENV"; fi

          # JWT
          if [ -n "${{ secrets.JWT_SECRET }}" ]; then echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> "$GITHUB_ENV"; fi
          if [ -n "${{ secrets.JWT_REFRESH_SECRET }}" ]; then echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> "$GITHUB_ENV"; fi

          # Stripe (prod keys)
          if [ -n "${{ secrets.STRIPE_SECRET_KEY }}" ]; then echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> "$GITHUB_ENV"; fi
          if [ -n "${{ secrets.STRIPE_WEBHOOK_SECRET }}" ]; then echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> "$GITHUB_ENV"; fi
          if [ -n "${{ secrets.STRIPE_PRICE_ID }}" ]; then echo "STRIPE_PRICE_ID=${{ secrets.STRIPE_PRICE_ID }}" >> "$GITHUB_ENV"; fi

      - name: Lint
        run: npm run lint --if-present

      - name: Test (Jest) with coverage
        run: |
          mkdir -p test-results
          npm test --if-present -- \
            --ci \
            --coverage \
            --reporters=default \
            --reporters=jest-junit

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-coverage-prod
          path: server/coverage
          if-no-files-found: warn

      - name: Upload test-results (JUnit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-test-results-prod
          path: server/test-results
          if-no-files-found: ignore

      - name: OpenAPI validate & bundle
        run: npm run openapi:build --if-present

      - name: Upload OpenAPI artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: openapi-dist-prod
          path: server/openapi/dist/*
          if-no-files-found: ignore

      - name: Build server
        run: npm run build --if-present

      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: server-build-prod
          path: |
            server/dist
            server/openapi
          if-no-files-found: ignore
# --- REPLACE END ---
